name: 🔍 Qualité - SonarCloud

on:
  workflow_run:
    workflows: ["🧪 Tests - Backend et Frontend"]
    types:
      - completed

jobs:
  analyse-sonarcloud:
    name: 🔍 Analyse complète SonarCloud
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      # FRONTEND – Génère lcov.info
      - name: 📦 Installer dépendances frontend
        run: npm ci
        working-directory: front

      - name: 🧪 Générer lcov.info (Angular)
        run: npm run test -- --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: front

      # BACKEND – Génère jacoco.xml et classes compilées
      - name: 📦 Installer dépendances backend
        run: mvn clean compile jacoco:report
        working-directory: back

      # 📊 Analyse SonarCloud
      - name: 🔎 Analyse SonarCloud (Java + Angular)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          npm install -g sonar-scanner

          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.organization=$SONAR_ORG \
            -Dsonar.sources=back/src,front/src \
            -Dsonar.java.binaries=back/target/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=back/target/site/jacoco/jacoco.xml \
            -Dsonar.javascript.lcov.reportPaths=front/coverage/bobapp/lcov.info \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      - name: 🧹 Nettoyage des rapports
        run: |
          rm -rf back/target/site/jacoco
          rm -rf front/coverage